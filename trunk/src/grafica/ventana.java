package grafica;

/**
 * Clase para testear propiedades de la clase File
 * @author  Ing. Valerio Frittelli
 * @version Marzo de 2008
 */
import java.io.*;
import javax.swing.*;
import principal.*;

public class ventana extends javax.swing.JFrame
{
    private JFileChooser jfd = new JFileChooser();
    private File f;
    private int porcentaje;
    private int pCompletado;
    private Compresor comp = new Compresor();
    
    /** Creates new form VentanaInicial */
    public ventana()
    {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSeleccionar = new javax.swing.JButton();
        btnDescomprimir = new javax.swing.JButton();
        jpbProgreso = new javax.swing.JProgressBar();
        btnComprimir = new javax.swing.JButton();
        btnDetener = new javax.swing.JButton();
        txtRuta = new javax.swing.JTextField();
        lblRutaDestino = new javax.swing.JLabel();
        lbRutaOrigen = new javax.swing.JLabel();
        txtRutaOrigen = new javax.swing.JTextField();
        lblProgreso = new javax.swing.JLabel();
        btnDestino = new javax.swing.JButton();
        mnuMenu = new javax.swing.JMenuBar();
        mnuArchivo = new javax.swing.JMenu();
        salir = new javax.swing.JMenuItem();
        mnuAcciones = new javax.swing.JMenu();
        explorar = new javax.swing.JMenuItem();
        codificar = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Uso de la clase File");
        setBackground(new java.awt.Color(204, 204, 255));
        setResizable(false);
        getContentPane().setLayout(null);

        btnSeleccionar.setText("Abrir...");
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });
        getContentPane().add(btnSeleccionar);
        btnSeleccionar.setBounds(10, 10, 130, 23);

        btnDescomprimir.setText("Descomprimir");
        btnDescomprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescomprimirActionPerformed(evt);
            }
        });
        getContentPane().add(btnDescomprimir);
        btnDescomprimir.setBounds(360, 40, 130, 23);
        getContentPane().add(jpbProgreso);
        jpbProgreso.setBounds(10, 220, 480, 13);

        btnComprimir.setText("Comprimir");
        btnComprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComprimirActionPerformed(evt);
            }
        });
        getContentPane().add(btnComprimir);
        btnComprimir.setBounds(360, 10, 130, 23);

        btnDetener.setText("Frenar proceso");
        btnDetener.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetenerActionPerformed(evt);
            }
        });
        getContentPane().add(btnDetener);
        btnDetener.setBounds(360, 160, 130, 23);
        getContentPane().add(txtRuta);
        txtRuta.setBounds(10, 160, 290, 20);

        lblRutaDestino.setText("Ruta de destino:");
        getContentPane().add(lblRutaDestino);
        lblRutaDestino.setBounds(10, 140, 290, 20);

        lbRutaOrigen.setText("Ruta de origen:");
        getContentPane().add(lbRutaOrigen);
        lbRutaOrigen.setBounds(10, 40, 290, 20);
        getContentPane().add(txtRutaOrigen);
        txtRutaOrigen.setBounds(10, 60, 290, 20);

        lblProgreso.setText("Progreso...");
        getContentPane().add(lblProgreso);
        lblProgreso.setBounds(10, 200, 80, 14);

        btnDestino.setText("Destino");
        btnDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDestinoActionPerformed(evt);
            }
        });
        getContentPane().add(btnDestino);
        btnDestino.setBounds(10, 110, 130, 23);

        mnuArchivo.setText("Archivo");

        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        mnuArchivo.add(salir);

        mnuMenu.add(mnuArchivo);

        mnuAcciones.setText("Acciones");

        explorar.setText("Abrir...");
        explorar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                explorarActionPerformed(evt);
            }
        });
        mnuAcciones.add(explorar);

        codificar.setText("Comprimir");
        codificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codificarActionPerformed(evt);
            }
        });
        mnuAcciones.add(codificar);

        jMenuItem1.setText("Descomprimir");
        mnuAcciones.add(jMenuItem1);

        mnuMenu.add(mnuAcciones);

        setJMenuBar(mnuMenu);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-507)/2, (screenSize.height-303)/2, 507, 303);
    }// </editor-fold>//GEN-END:initComponents

    private void btnDescomprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescomprimirActionPerformed
     comp.descomprimir(txtRutaOrigen.getText());
        
        // comp.descomprimir(txtRuta.getText());       
        
        /*/limpiar ();
        codificar();*/
}//GEN-LAST:event_btnDescomprimirActionPerformed

    private void explorarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_explorarActionPerformed
        limpiar();
        seleccionar();
    }//GEN-LAST:event_explorarActionPerformed

    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed
        limpiar();
        seleccionar();
}//GEN-LAST:event_btnSeleccionarActionPerformed

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_salirActionPerformed

    private void codificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codificarActionPerformed
        limpiar ();
        codificar();
    }//GEN-LAST:event_codificarActionPerformed

    private void btnComprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComprimirActionPerformed
        comp.comprimir(txtRutaOrigen.getText());
}//GEN-LAST:event_btnComprimirActionPerformed

    private void btnDetenerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetenerActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_btnDetenerActionPerformed

    private void btnDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDestinoActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_btnDestinoActionPerformed
    
    /**
      * Clase que lee byate a byte el contenido del archivo y lo niega
      * @author  Morales - Roldán - Senn
      * @version Mayo de 2008
      */
    private void seleccionar()
    {
        this.setTitle("Seleccione el archivo codificar: ");
        
        int r = jfd.showOpenDialog(this);
        if(r == JFileChooser.APPROVE_OPTION)
        {
            f = jfd.getSelectedFile();
            encabezado();
        }
    }
    
    /**
      * Clase que lee byate a byte el contenido del archivo y lo niega
      * @author  Morales - Roldán - Senn
      * @version Mayo de 2008
      */
    private void codificar ()
    {
        try
        {
            f = jfd.getSelectedFile();
            RandomAccessFile raf = new RandomAccessFile(f, "rw");
            if(f != null)
            {
                // posiciono el puntero al comienzo del archivo para comenzar a leerlo byte a byte
                raf.seek(0);
                pCompletado = 0;
                encabezado();
                
                while(raf.getFilePointer() < raf.length())
                {
                    byte b = raf.readByte();
                    b = (byte)~b;
                    raf.seek(raf.getFilePointer()-1);
                    raf.write(b);
                    
                    // indica el progreso actual de codificacion
                    progreso(raf.getFilePointer(), raf.length());
                }
                lblProgreso.setText("Archivo codificado!");
                raf.close();
            }
        }
        catch(NullPointerException e)
        {
            JOptionPane.showMessageDialog(this, "Seleccione antes un archivo", "Error", JOptionPane.ERROR_MESSAGE);
        }        
        catch(IOException e)
        {
            JOptionPane.showMessageDialog(this, "Error al procesar el archivo", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
      * Clase para calcular el porcentaje de progreso en la codificación del archivo
      * @author  Morales - Roldán - Senn
      * @version Mayo de 2008
      */
    public void progreso(long actual, long tam)
    {
        porcentaje = (int) (actual * 100 / tam);
        if (porcentaje > pCompletado)
        {
            pCompletado = porcentaje;
            System.out.println("Completado %" + pCompletado);
            jpbProgreso.setValue(porcentaje);
        }
    }
    
    /**
      * Clase para setear los componentes a su estado inicial
      * @author  Morales - Roldán - Senn
      * @version Mayo de 2008
      */
    private void limpiar ()
    {
        jpbProgreso.setValue(0);
        lblProgreso.setText("");
    }
    
    /**
      * Muestra el nombre y tamaño del archivo
      * @author  Morales - Roldán - Senn
      * @version Mayo de 2008
      */
    private void encabezado ()
    {
        txtRutaOrigen.setText(f.getAbsolutePath());   //aca cambie
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnComprimir;
    private javax.swing.JButton btnDescomprimir;
    private javax.swing.JButton btnDestino;
    private javax.swing.JButton btnDetener;
    private javax.swing.JButton btnSeleccionar;
    private javax.swing.JMenuItem codificar;
    private javax.swing.JMenuItem explorar;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JProgressBar jpbProgreso;
    private javax.swing.JLabel lbRutaOrigen;
    private javax.swing.JLabel lblProgreso;
    private javax.swing.JLabel lblRutaDestino;
    private javax.swing.JMenu mnuAcciones;
    private javax.swing.JMenu mnuArchivo;
    private javax.swing.JMenuBar mnuMenu;
    private javax.swing.JMenuItem salir;
    private javax.swing.JTextField txtRuta;
    private javax.swing.JTextField txtRutaOrigen;
    // End of variables declaration//GEN-END:variables
    
}
